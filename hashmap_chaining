#include <stdio.h>
#include <stdlib.h>

struct node{
    int numar;
    struct node *next;
};

struct hashtable{
    struct node **entries;
    int size;
};

int hash(int nr, int table_size)
{
    if (nr < 0)
    {
        do
        {
            nr += table_size;
        }
        while (nr < 0);
    }
    return nr % table_size;
}

void inserare (struct hashtable *table, int val)
{
    int i = hash(val, table->size);
    struct node *nod = malloc(sizeof(struct node));
    nod->numar = val;
    nod->next = NULL;
    if (table->entries[i] == NULL)
    {
        table->entries[i] = nod;
    }
    else
    {
        struct node *tmp = table->entries[i];
        while (tmp->next != NULL)
        {
            tmp = tmp->next;
        }
        tmp->next = nod;
    }
}

void afisare(struct hashtable *table)
{
    for (int i = 0 ; i < table->size ; i++)
    {
        printf ("%d: ", i);
        if (table->entries[i] != NULL)
        {
            struct node *tmp = table->entries[i];
            while (tmp != NULL)
            {
                printf ("%d ", tmp->numar);
                tmp = tmp->next;
            }
        }
        printf("\n");
    }
}

int main()
{
    int m, n;
    scanf ("%d %d", &m, &n);
    struct hashtable *table = malloc(sizeof(struct hashtable));
    table->size = m;
    table->entries = malloc(m * sizeof(struct node));
    int nr;
    for (int i = 0 ; i < n ; i++)
    {
        scanf ("%d", &nr);
        inserare (table, nr);
    }
    afisare (table);
    return 0;
}
